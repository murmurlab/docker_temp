# This is a default site configuration which will simply return 404, preventing
# chance access to any other virtualhost.

upstream php {
	#this should match value of "listen" directive in php-fpm pool
	# server unix:/tmp/php-fpm.sock;
	server 127.0.0.1:9000;
}

server {
	listen 80 default_server;
	listen [::]:80 default_server;

	ssl_protocols TLSv1.3;
	  ssl_certificate /path/to/your/certificate.crt;
  ssl_certificate_key /path/to/your/private.key;


	root /var/wp/wordpress;
	index index.html index.htm index.php;

	server_name _;

	location / {
		# This is cool because no php is touched for static content.
		# include the "?$args" part so non-default permalinks doesn't break when using query string
		try_files $uri $uri/ /index.php?$args;
	}
	location ~ \.php$ {
		#NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
		try_files $uri =404;
		include fastcgi_params;
		include fastcgi.conf;
		fastcgi_intercept_errors on;
		fastcgi_pass php;
	}

	# You may need this to prevent return 404 recursion.
	location = /404.html {
		internal;
	}

	# Global restrictions configuration file.
	# Designed to be included in any server {} block.
	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	# Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
	# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
	location ~ /\. {
		deny all;
	}

	# Deny access to any files with a .php extension in the uploads directory
	# Works in sub-directory installs and also in multisite network
	# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
	location ~* /(?:uploads|files)/.*\.php$ {
		deny all;
	}
}
